namespace mdcc;

abstract service MdccLearner {
  defer Phase2b(Phase2bRequest req);
};

abstract service MdccClient {
  defer Start(StartRequest req | StartResponse res);
  defer StartPiece(rococo::SimpleCommand cmd | StartPieceResponse res);
};

abstract service MdccLeader {
  defer Propose(ProposeRequest req);
};

abstract service MdccAcceptor {
  defer Propose(ProposeRequest req);
  defer Phase2a(Phase2aRequest req);
};

struct StartRequest {
  i64 txn_id;
  i32 txn_type;
  rococo::TxnWorkspace inputs;
};

struct StartPieceRequest {
  i64 txn_id;
  i32 txn_type;
  i32 piece_id;
  rococo::SimpleCommand command;
  rococo::TxnWorkspace inputs;
};

struct StartResponse {
  i8 result; // 1 = accept; 0 = reject
};

struct StartPieceResponse {
  i32 result; // 1 = accept; 0 = reject
};

struct ProposeRequest {
  Ballot ballot;
  OptionSet updates;
};

struct ProposeResponse {
  string table;
  i64 key;
  i8 accepted;
};

struct Phase2aRequest {
  i32 site_id;
  Ballot ballot;
  std::vector<OptionSet> values;
};

struct Phase2bRequest {
  i32 site_id;
  Ballot ballot;
  std::vector<OptionSet> values;
};

struct Phase2aResponse {
};
